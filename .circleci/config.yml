version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1.5
  ansible-playbook: orbss/ansible-playbook@0.0.5

executors:
  node:
    docker:
      - image: cimg/node:18.16.0
  ruby:
    docker:
      - image: cimg/ruby:3.2.2

jobs:
  execute-cloudformation:
    executor: node
    steps:
      - checkout
      - aws-cli/install
      - run:
          name: deploy CloudFormation
          command: |
            aws cloudformation deploy --template-file cloudformation/raisetech13-vpc.yml --stack-name raisetech13-vpc
            aws cloudformation deploy --template-file cloudformation/raisetech13-ec2.yml --stack-name raisetech13-ec2
            aws cloudformation deploy --template-file cloudformation/raisetech13-rds.yml --stack-name raisetech13-rds
      - run: 
          name: set environment variable
          command: |
            set -x
            echo export EC2_PUBLIC_IP_ADDRESS="$(aws ec2 describe-instances | jq '.Reservations[].Instances[] | select( .State.Name=="running" and .Tags[].Value=="raisetech13").PublicIpAddress')" >> $BASH_ENV
            source $BASH_ENV
      - run: |
          cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - bash.env

  execute-ansible:
    executor: ansible-playbook/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: |
          cat bash.env >> $BASH_ENV
      - run:
          name: set inventory file
          command: sed -i "1i ansible_dev_target ansible_host=${EC2_PUBLIC_IP_ADDRESS} ansible_connection=ssh ansible_user=ec2-user" ansible/inventory
      - add_ssh_keys:
          fingerprints:
            - "8a:34:6b:e6:47:18:d3:e6:02:24:43:3b:1c:4c:5f:96"
      - run: 
          name: Get ansible-vault
          command: |
            echo $ANSIBLE_VAULT > vault-password.txt
      - ansible-playbook/install:
          version: 2.10.7
      - ansible-playbook/playbook:
          playbook: ansible/playbook.yml
          playbook-options: '-i ansible/inventory --vault-password-file=vault-password.txt'

workflows:
  version: 2
  release:
    jobs:
      - execute-cloudformation
      - execute-ansible:
          requires:
              - execute-cloudformation
