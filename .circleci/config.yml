# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1.5
  ansible-playbook: orbss/ansible-playbook@0.0.5
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  execute-cloudformation:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run: 
          name: deploy CloudFormation
          command: |
            aws cloudformation deploy --template-file cloudformation/raisetech13-vpc.yml --stack-name raisetech13-vpc
            aws cloudformation deploy --template-file cloudformation/raisetech13-ec2.yml --stack-name raisetech13-ec2
            aws cloudformation deploy --template-file cloudformation/raisetech13-rds.yml --stack-name raisetech13-rds
      - run:
          name: Get EC2 Instance IP
          command: |
            INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=raisetech13" --query "Reservations[0].Instances[0].InstanceId" --output text)
            INSTANCE_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[0].Instances[0].PublicIpAddress" --output text)
            echo "INSTANCE_IP=$INSTANCE_IP" >> $BASH_ENV

  setup-inventory:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Configure Ansible Inventory
          command: |
            # Ansibleインベントリファイルを生成し、IPアドレスを追加
            echo "[target_node]" > ansible/inventory
            echo "$INSTANCE_IP>> ansible/inventory
  execute-ansible: 
    executor: ansible-playbook/default
    parameters:
      inventory:
        default: NONEXISTENT_ANSIBLE_INVENTORY
        description: |
          Ansible inventory file. The default value must be empty,
          so do not store any value to this environment variable.
          The data must be registered in base64 format
        type: env_var_name
      playbook:
        description: |
          The path of Ansible playbook
        type: string
      private-key:
        default: NONEXISTENT_ANSIBLE_SSH_KEY
        description: |
          SSH private key file. The default value must be empty,
          so do not store any value to this environment variable.
          The data must be registered in base64 format
        type: env_var_name
    environment:
      VAULT-PASSWORD-FILE: $ANSIBLE_VAULT
    steps: 
      - checkout
      - ansible-playbook/install:
          version: 2.10.7
      - ansible-playbook/playbook:
          inventory: <<parameters.inventory>>
          playbook: <<parameters.playbook>>
          private-key: <<parameters.private-key>>
          playbook-options: '-u ec2-user --vault-password-file VAULT-PASSWORD-FILE'
#  execute-serverspec:
#    docker:
#      - image: circleci/ruby:latest
#    steps:
#      - checkout
#      - add_ssh_keys: 
#          fingerprints:
#            - "8a:34:6b:e6:47:18:d3:e6:02:24:43:3b:1c:4c:5f:96"
#      - run:
#          name: test rails_app
#          command: |
#            gem install bundler
#            gem install serverspec 
#            gem install rake
#            gem install ed25519 -v '1.2'
#            gem install bcrypt_pbkdf -v '1.0'
#            cd serverspec
#            rake spec

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  RaiseTech-CircleCI:
    jobs:
      - execute-cloudformation
      - setup-inventory:
          requires:
             - execute-cloudformation
      - execute-ansible:
          requires:
            - setup-inventory
          inventory: ANSIBLE_INVENTORY
          playbook: ansible/playbook.yml
          private-key: ANSIBLE_SSH_KEY
 #     - execute-serverspec:
 #         requires:
 #           - execute-cloudformation
 #           - execute-ansible